package com.voracious.ep1cG4m3;

/*  
 *  Ep1c G4m3 -- A parody platformer
 * 
 *  Copyright (C) 2011  Voracious Softworks
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.

 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 */

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

import javax.swing.JApplet;

import com.voracious.ep1cG4m3.framework.Screen;
import com.voracious.ep1cG4m3.screens.Menu;

/**
 * Main class. It makes the window and handles screen switching.
 * 
 * @author Voracious Softworks
 * @version 6/20/2011
 * @see JApplet
 */

public class Game extends JApplet {
	
	/**
	 * Generated by Eclipse, It's to get rid of a warning.
	 */
	private static final long serialVersionUID = 4442265073346973079L;
	public static final int MENU_ID = 0;
	
	private int currentScreen;
	Menu menu;
	
	@Override
	public void start(){
		menu = new Menu(MENU_ID);
		currentScreen = 0;
	}
	
	@Override
	public void paint(Graphics g){
		Graphics2D p = (Graphics2D)g;
		p.setColor(Color.GRAY); //Give it a background
		p.fillRect(0, 0, getWidth(), getHeight()); //500x400 should be the width x height
		
		switch(getCurrentScreen()){
			case MENU_ID:
				menu.draw(p);
		}
		
	}
	
	public void onScreenResult(int id, int result){
		switch(id){
			case MENU_ID:
				if(result == Menu.RESULT_PLAY)
					switchCurrentScreen(MENU_ID);
				break;
			default:
				System.out.println("WARNING: Unknown id returned a result!");
				break;
		}
	}
	
	public int getCurrentScreen(){
		return currentScreen;
	}
	
	public void switchCurrentScreen(int id){
		getScreenFromId(currentScreen).stop();
		currentScreen = id;
		getScreenFromId(currentScreen).start();
	}
	
	public Screen getScreenFromId(int id){
		switch(id){
			case MENU_ID:
				return menu;
			default:
				System.out.println("ERROR: screen not found");
				return null;
		}
	}
}
